<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
 <!-- 全局变量与局部变量的差距
 	  StringBuilder
 	  inputStream buff
  -->
<mapper namespace="cn.tedu.mybatis.UserMapper">
	<!-- MyBatis -->
	<insert id="addnew" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO t_user (
		username, password,
		age, phone,
		email
	) VALUES(
		#{username}, #{password},
		#{age}, #{phone},
		#{email}
	)
	</insert>
	
	<delete id="deleteById">
	DELETE FROM t_user WHERE ID=#{id}
	</delete>
	
	<delete id="deleteByIds">
	DELETE FROM t_user WHERE id IN (
		<foreach collection="array" item="id" separator=",">
			#{id}
		</foreach>
	)
	</delete>
	
	<update id="updatePW">
	UPDATE t_user SET password=#{password}
	</update>
	
	<update id="updateEmail" >
	UPDATE t_user SET email=#{email} WHERE id=#{id}
	</update>
	
	<select id="count" resultType="java.lang.Integer">
	SELECT COUNT(*) FROM t_user
	</select>
	<!-- id属性: 自定义名称 -->
	<!-- type属性: 封装查询结果的数据类型的全名 -->
	<resultMap type="cn.tedu.mybatis.User" id="UserMap">
	<!-- 将哪一列的结果封装到哪个属性中取 -->
		<result column="department_id" property="departmentId"/>
		<!-- 在配置单表查询结果时,名称匹配的,可以不必配置 -->
	</resultMap>
	
	<!-- 使用缓存 -->
	<select id="findById" useCache="true" resultMap="UserMap">
	SELECT * FROM t_user WHERE id=#{id}
	</select>
	
	<select id="findByUsername" resultType="cn.tedu.mybatis.User">
	SELECT * FROM t_user WHERE username=#{username}
	</select>
	
	<select id="findAll" resultType="cn.tedu.mybatis.User">
	SELECT id,username,password,age,phone,email,department_id departmentId FROM t_user ORDER BY id
	</select>
	
	
	<select id="find" resultType="cn.tedu.mybatis.User">
	SELECT * FROM t_user
	<if test="where != null">
	WHERE 
		${where}
	</if>
	<if test="orderBy != null">
	ORDER BY
		${orderBy}
	</if>
	<if test="offset != null and count != null">
	LIMIT
		#{offset}, #{count}
	</if>	
	</select>
	
	<select id="findVOById" resultType="cn.tedu.mybatis.UserVO">
	select 
        t_user.id, username,
        password, age,
        phone, email,
        department_id AS departmentId, 
        name AS departmentName
    from 
        t_user 
    left join 
        t_department 
    on 
        t_user.department_id=t_department.id 
    where 
        t_user.id=#{id}
	</select>
	
	
	
</mapper>
